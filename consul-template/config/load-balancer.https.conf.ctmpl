# All services:
{{ range services }} {{ range service .Name }} {{$name := .Name}}
# upstream {{$name}}
{{- if in .Tags "nginx-route" -}}
#    âœ… nginx-route
{{- end -}}
{{end}}
{{end}}


{{ range services }} {{$name := .Name}} {{$service := service .Name}}
{{- if in .Tags "nginx-route" -}}
upstream {{$name}} {
   zone upstream-{{$name}} 64k;
   {{range $service}}server {{.Address}}:{{.Port}} max_fails=3 fail_timeout=60 weight=1;{{else}}server 127.0.0.1:65535; # force a 502{{end}}
}
{{- end -}}
{{end}}

{{ range services }} {{ range service .Name }} {{$name := .Name}} {{$service := .Name}}
{{- if in .Tags "nginx-route" -}}
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2; # IPv6 support
    server_name {{index .ServiceMeta "domain"}};

    ## Start: Size Limits & Buffer Overflows ##
    client_body_buffer_size  1K;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 4k;
    # But exception to us because we need to accept large payloads (currently)
    # This should be configurable, but needs work:
    # https://github.com/dionjwa/dynamic-dns-automatic/issues/2
    client_max_body_size 100M;
    client_body_timeout 10m;
    ## END: Size Limits & Buffer Overflows ##

    ## Start: Security best practices https://www.acunetix.com/blog/web-security-zone/hardening-nginx/
    server_tokens off; # disable the Server nginx header
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ## END: Security best practices

    ## Start: Sensible defaults
    # without this, browser requests to e.g. _logout start a download
    default_type text/plain;
    # enable gzip
    gzip on;
    gzip_disable "msie6";
    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        image/svg+xml;
    ## END: Sensible defaults



    ssl_certificate /etc/nginx/ssl/live/{{index .ServiceMeta "domain"}}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/{{index .ServiceMeta "domain"}}/privkey.pem;

    # Handle websockets
    location /{{index .ServiceMeta "path"}} {
        try_files /nonexistent @{{index .ServiceMeta "path"}}$http_upgrade;
    }
    location @{{index .ServiceMeta "path"}}websocket {
        proxy_pass http://{{$name}};

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # Set 60-minute timeout between reads and writs
        # proxy_read_timeout 3600;
        # proxy_send_timeout 3600;
    }
    location @{{index .ServiceMeta "path"}} {
        # TODO: limit all except needed
        # https://www.acunetix.com/blog/web-security-zone/hardening-nginx/
        # limit_except GET HEAD POST { deny all; }
        proxy_set_header Host $host;
        proxy_pass http://{{$name}};
    }
}
{{- end -}}
{{end}}
{{end}}
